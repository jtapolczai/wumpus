
* [x] put the action-printing somewhere in world.hs (change writer-constraint to Reader?)

* let NoOp lower contentment

* [x] Create setup-function for worlds to fine-tune scenarios

The problem: when the agent is extremely hungry, its attention goes towards itself (the (0,0)-field), not to the field with the plant on it, despite its inability to do something on (0,0). It should only select fields where it can actually do an action.
   * only try to do admissible actions (i.e. don't try to give items to empty fields)
   * go to next field if there's no admissible action for the currently selected one (e.g. (0,0) evokes the strongest emotion, but the agent has no food => select nearby field with a plant on it).

   * [x] In effect, checking whether the proposed actions can be performed is the poor man's goal selection.
     * Action selectors have to have access to the world data :(((((
       * Well, we can just reconstruct a single cell, so that should be OK.
       * 
* [x] write isActionPossible with takes a world (can be gotten from memory, no reconstruction needed), and agent name, and an action and returns a Bool which will be True iff the action is possible for the agent in that world. If the agent isn't present in the world, the function returns False.

* [x] let the memory create a world and store it as-is
  * [x] but make sure that it has an agent index!!!
* [x] the BG should work basically as-is (with minor adjustments)
* [x] the DM can directly recall a memory-world and check for action possibility via World.isActionPossible.
* [x] Make a module World.rules to house things like isEdible.
* [ ] Create an export function for bitmaps?
* [x] create VisualWorld (for memories; the cells are VCDs, not CDs)
   * [x] write liftWorld :: VisualWorld -> World

* [x] see why Move isn't an action to RI (0,1)

* [x] removeUnplannedMemories doesn't work

* [x] redundant messages for (0,0):
  RI {runRelInd = (0,0)}
[(True,AMYouAreHere,0),(True,AMTemperature Hot,0),(True,AMTime 26,0),(True,AMPosition (2,1),0),(True,AMHaveHealth (9 % 100),0),(True,AMHaveStamina (1 % 1),0),(True,AMHaveMeat 0,0),(True,AMHaveFruit 0,0),(True,AMHaveGold 0,0),(True,AMDirection North,0),(True,AMVisualAgent (RI {runRelInd = (0,0)}) "1",0),(True,AMVisualEntityStamina (RI {runRelInd = (0,0)}) (1 % 1),0),(True,AMVisualEntityHealth (RI {runRelInd = (0,0)}) (9 % 100),0),(True,AMVisualEntityDirection (RI {runRelInd = (0,0)}) North,0),(True,AMVisualAgent (RI {runRelInd = (0,0)}) "1",0),(True,AMVisualPlant (RI {runRelInd = (0,0)}) (1 % 1),0),(True,AMVisualFruit (RI {runRelInd = (0,0)}) 0,0),(True,AMVisualMeat (RI {runRelInd = (0,0)}) 0,0),(True,AMVisualGold (RI {runRelInd = (0,0)}) 0,0),(True,AMDirection North,0),(True,AMHaveGold 0,0),(True,AMHaveFruit 0,0),(True,AMHaveMeat 0,0),(True,AMHaveStamina (1 % 1),0),(True,AMHaveHealth (9 % 100),0),(True,AMPosition (2,1),0)]

* [x] don't add myself as a visual entity (???). See above.

* [x] likely related to the above: canBeEntered 

* [x] rotate actions are not registered (:()

* [x] memory is overriden, not merged (see Rotate South)-action
* [x] but the NoActionableCells-error still shouldn't be triggered; (0,0) should still exist!

* [x] harvest-action is not registered in the statistics
  * [x] moveEntity (probably) sends an entityDied-message to the statistics

* [x] erroneous "Move to South"-action generated in first step :(

* [x] no possible actions if the agent turns south :(

* [x] staminaIncreased 0 sent (likely via World.increaseStamina).
* [x] memory is overriden, not merged (the issue persists!)
      this MIGHT be in the SG-instance, but more likely in resetMemory.
* [ ] is the global stuff actualized?
  * [x] health decrease per round?
  * [x] health increase after eating?
  * [ ] stench/breeze maps?
  * [x] stamina increase per round
